<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserDao">

    <!--使用别名，映射到User类的属性上，如果表中字段名和User类属性名一样就不需要使用别名-->
    <select id="queryUserById" resultType="com.mybatis.pojo.User">
      SELECT
       tuser.id AS id,tuser.user_name AS userName,tuser.password AS password,tuser.name AS name,
       tuser.age AS age,tuser.birthday AS birthday,tuser.sex AS sex,tuser.created AS created, tuser.updated AS updated
       FROM
       tb_user tuser
       WHERE tuser.id = #{id};
   </select>

    <!-- 返回一个列表，和返回一个单一数据一样定义resultType-->
    <select id="queryUserAll" resultType="com.mybatis.pojo.User">
        SELECT * FROM tb_user;
    </select>

    <!--插入数据-->
    <insert id="insertUser" parameterType="com.mybatis.pojo.User">
        INSERT INTO tb_user (user_name,password,name,age,sex,birthday,created,updated)
        VALUES
        (#{userName},#{password},#{name},#{age},#{sex},#{birthday},now(),now());
    </insert>

    <update id="updateUser" parameterType="com.mybatis.pojo.User">
        UPDATE tb_user
        <trim prefix="set" suffixOverrides=",">
            <if test="userName!=null">user_name = #{userName},</if>
            <if test="password!=null">password = #{password},</if>
            <if test="name!=null">name = #{name},</if>
            <if test="age!=null">age = #{age},</if>
            <if test="sex!=null">sex = #{sex},</if>
            <if test="birthday!=null">birthday = #{birthday},</if>
            updated = now(),
        </trim>
        WHERE
        (id = #{id});
    </update>

    <delete id="deleteUser">
        delete from tb_user where id=#{id}
    </delete>
</mapper>